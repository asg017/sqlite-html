name: "release"
on:
  release:
    types: [published]
  workflow_dispatch:
permissions:
  contents: read
jobs:
  build-linux_x86-extension:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      # using actions/setup-go@v1 is the only way to get macos build to work.
      # otherwise, with v2, would get this cgo error: 'cgo-generated-wrappers:13:13: error: redefinition of 'free' as different kind of symbol'
      - name: Set up Go 1.17
        uses: actions/setup-go@v1
        with:
          go-version: 1.17
      - run: make loadable
      - uses: actions/upload-artifact@v3
        with:
          name: sqlite-html-linux_x86
          path: dist/html0.so
  build-linux_x86-python:
    runs-on: ubuntu-20.04
    needs: [build-linux_x86-extension]
    steps:
      - uses: actions/checkout@v3
      - name: Download workflow artifacts
        uses: actions/download-artifact@v3
        with:
          name: sqlite-html-linux_x86
          path: dist/
      - uses: actions/setup-python@v3
      - run: pip install wheel
      - run: make python
      - run: make datasette
      - uses: actions/upload-artifact@v3
        with:
          name: sqlite-html-linux_x86-wheels
          path: dist/wheels/*.whl

  build-macos-extension:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      # using actions/setup-go@v1 is the only way to get macos build to work.
      # otherwise, with v2, would get this cgo error: 'cgo-generated-wrappers:13:13: error: redefinition of 'free' as different kind of symbol'
      - name: Set up Go 1.17
        uses: actions/setup-go@v1
        with:
          go-version: 1.17
      - run: make loadable
      - uses: actions/upload-artifact@v3
        with:
          name: sqlite-html-macos
          path: dist/html0.dylib
  build-macos-python:
    runs-on: macos-latest
    needs: [build-macos-extension]
    steps:
      - uses: actions/checkout@v3
      - name: Download workflow artifacts
        uses: actions/download-artifact@v3
        with:
          name: sqlite-html-macos
          path: dist/
      - uses: actions/setup-python@v3
      - run: pip install wheel
      - run: make python
      - run: make datasette
      - uses: actions/upload-artifact@v3
        with:
          name: sqlite-html-macos-wheels
          path: dist/wheels/*.whl

  build-windows-extension:
    name: Building windows extension
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      # using actions/setup-go@v1 is the only way to get macos build to work.
      # otherwise, with v2, would get this cgo error: 'cgo-generated-wrappers:13:13: error: redefinition of 'free' as different kind of symbol'
      - name: Set up Go 1.17
        uses: actions/setup-go@v1
        with:
          go-version: 1.17
      - run: make loadable
      - uses: actions/upload-artifact@v3
        with:
          name: sqlite-html-windows
          path: dist/html0.DLL
  build-windows-python:
    runs-on: windows-latest
    needs: [build-windows-extension]
    steps:
      - uses: actions/checkout@v3
      - name: Download workflow artifacts
        uses: actions/download-artifact@v3
        with:
          name: sqlite-html-windows
          path: dist/
      - uses: actions/setup-python@v3
      - run: pip install wheel
      - run: make python
      - run: make datasette
      - uses: actions/upload-artifact@v3
        with:
          name: sqlite-html-windows-wheels
          path: dist/wheels/*.whl
  upload-extensions:
    name: Upload release assets
    needs:
      [
        build-macos-extension,
        build-linux_x86-extension,
        build-windows-extension,
      ]
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download workflow artifacts
        uses: actions/download-artifact@v2
      - run: npm install tar-fs
      - uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const script = require('.github/workflows/upload.js')
            await script({github, context})
  upload-deno:
    name: Upload Deno release assets
    needs:
      [
        build-macos-extension,
        build-linux_x86-extension,
        build-windows-extension,
      ]
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download workflow artifacts
        uses: actions/download-artifact@v2
      - uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const script = require('.github/workflows/upload-deno-assets.js')
            await script({github, context})
  upload-npm:
    needs:
      [
        build-macos-extension,
        build-linux_x86-extension,
        build-windows-extension,
      ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download workflow artifacts
        uses: actions/download-artifact@v2
      - run: |
          cp sqlite-html/sqlite-html-linux_x86/html0.so npm/sqlite-html-linux-x64/lib/html0.so
          cp sqlite-html/sqlite-html-macos/html0.dylib npm/sqlite-html-darwin-x64/lib/html0.dylib
          cp sqlite-html/sqlite-html-windows/html0.dll npm/sqlite-html-windows-x64/lib/html0.dll
      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          registry-url: "https://registry.npmjs.org"
      - name: Publish NPM sqlite-html-linux-x64
        working-directory: npm/sqlite-html-linux-x64
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Publish NPM sqlite-html-darwin-x64
        working-directory: npm/sqlite-html-darwin-x64
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Publish NPM sqlite-html-windows-x64
        working-directory: npm/sqlite-html-windows-x64
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Publish NPM sqlite-html
        working-directory: npm/sqlite-html
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  upload_pypi:
    needs: [build-linux_x86-python, build-macos-python, build-windows-python]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: sqlite-html-windows-wheels
          path: dist
      - uses: actions/download-artifact@v3
        with:
          name: sqlite-html-linux_x86-wheels
          path: dist
      - uses: actions/download-artifact@v3
        with:
          name: sqlite-html-macos-wheels
          path: dist
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip_existing: true
